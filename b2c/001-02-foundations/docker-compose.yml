version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 20

  pgadmin:
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports: ["${PGADMIN_PORT}:80"]
    depends_on: [postgres]

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  web-api:
    build: ./apps/web-api
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      WEB_API_PORT: ${WEB_API_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["${WEB_API_PORT}:3000"]

  web-frontend:
    build: ./apps/web-frontend
    env_file: .env
    environment:
      INTERNAL_WEB_API_URL: http://web-api:3000
    depends_on:
      web-api:
        condition: service_started
    ports: ["${WEB_FRONTEND_PORT}:3000"]

  admin-api:
    build: ./apps/admin-api
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      ADMIN_API_PORT: ${ADMIN_API_PORT}
      REDIS_URL: ${REDIS_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports: ["${ADMIN_API_PORT}:3000"]

  admin-frontend:
    build: ./apps/admin-frontend
    env_file: .env
    environment:
      INTERNAL_ADMIN_API_URL: http://admin-api:3000
    depends_on:
      admin-api:
        condition: service_started
    ports: ["${ADMIN_FRONTEND_PORT}:3000"]

volumes:
  pgdata:
